import numpy as np
from PIL import Image

import preprocessing


def read_binary_file(file_path):
    with open(file_path, 'rb') as f:
        binary_data = f.read()
    return binary_data


def binary_to_image(binary_data):
    img = Image.frombytes('L', (1, len(binary_data)), binary_data)
    img_size = int(np.ceil(np.sqrt(len(binary_data))))
    img = img.resize((img_size, img_size))
    return np.array(img)


def process_file(file_path):
    binary_data = read_binary_file(file_path)
    img = binary_to_image(binary_data)
    np.save(file_path + '.npy', img)


# preprocessing.main()

# # Read binary file
# with open('/content/sample_data/2', 'rb') as f:
#      binary_data = f.read()
#
# # Convert binary data to grayscale image
# img = Image.frombytes('L', (1, len(binary_data)), binary_data)
# img_size = int(np.ceil(np.sqrt(len(binary_data))))
# img = img.resize((img_size, img_size))
#
# # Save grayscale image
# img.save('/content/sample_data/2_grayscale.png')
